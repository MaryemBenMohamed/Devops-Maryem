version: '3.8'
services:
  devops_project:
    image: devops_project
    build:
      context: ./DevOps_Project
      dockerfile: Dockerfile
    ports:
      - "8082:8082"
    depends_on:
      - postgresdb
    tty: true
    networks:
      - newnetwork
    environment:
      SPRING_APPLICATION_JSON: '{
              "spring.datasource.url"  : "jdbc:postgresql://postgresdb:5432/devopsDB",
              "spring.datasource.username" : "postgres",
              "spring.datasource.password" : "root",
              "spring.jpa.hibernate.ddl-auto" : "update",
              "spring.profiles.active"="prod"
            }'
    healthcheck:
      test: ["CMD", "curl", "-f", "http://devops_project:8082/actuator/health"]
      interval: 10s
      timeout: 5s
      retries: 5

  devops_project_front:
    image: devops_project_front
    build:
      context: ./DevOps_Project_Front
    ports:
      - 4200:4200
    volumes:
      - .:/app
    tty: true
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:4200 || exit 1"]
      interval: 10s
      timeout: 5s
      retries: 5

  postgresdb:
    image: postgres:latest
    networks:
      - newnetwork
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: root
      POSTGRES_DB: devopsDB
    ports:
      - "5434:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data

networks:
  newnetwork:
    driver: bridge

volumes:
  postgres-data: